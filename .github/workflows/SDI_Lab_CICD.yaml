name: SDI Lab CI/CD

on:
  workflow_dispatch
# on:
#   push:
#     branches:
#       - main
#   pull_request:
#     types: [opened, synchronize, reopened, closed]
#     branches:
#       - main

permissions:
  id-token: write
  contents: read

env:
  Subscription: 42418c1f-e6af-41ea-aa9e-41ba0fbff635 # Hard coded for now
  Region: westeurope
  AppEnvironment: Development # Or Demo
  ResourceGroup: rg-sdilab

jobs:

  createSWA:
    name: Ensure SWA infrastructure is Created
    runs-on: ubuntu-latest
    outputs:
      swaName: ${{ steps.createSWA.outputs.swaName }}
    steps:

      - name: Checkout code
        uses: actions/checkout@v3
        with:
          submodules: false

      - name: Az CLI login
        uses: azure/login@v1
        with:
            client-id: ${{ secrets.AZURE_CLIENT_ID }}
            tenant-id: ${{ secrets.AZURE_TENANT_ID }}
            subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Create SWA
        id: createSWA
        uses: azure/CLI@v1
        with:
          azcliversion: 2.42.0
          inlineScript: |
            if [ $AppEnvironment == "Development" ]
            then
              echo "Using development parameters"
              $ResourceGroup="$ResourceGroup-dev"
              $ParametersFile="Environments/development.parameters.json"
            elif [ $AppEnvironment == "Demo" ]
            then
              echo "Using demo parameters"
              $ResourceGroup = "$ResourceGroup-demo"
              $ParametersFile="Environments/demo.parameters.json"
            else
              echo "Unknown environment"
              exit 1
            fi

            echo "ResourceGroup=$ResourceGroup"
            echo "ParametersFile=$ParametersFile"
            exit 0
            
            az group create -n resourceGroup -l $Region

            res=$(az deployment group create \
              --resource-group $ResourceGroup \
              --template-file "Templates/main.bicep" \
              --parameters $ParametersFile \
              --query "properties.outputs.swaName.value")

            echo "swaName=$res" >> $GITHUB_OUTPUT

      # - name: Write value
      #   uses: azure/CLI@v1
      #   with:
      #     azcliversion: 2.42.0
      #     inlineScript: |
      #       echo "The name is: ${{ steps.createSWA.outputs.swaName }}"

  # listSWA:
  #   name: List SWA
  #   runs-on: ubuntu-latest
  #   needs: createSWA
  #   env:
  #     swaName: ${{ needs.createSWA.outputs.swaName }}
  #   steps:

  #     - name: Write value
  #       uses: azure/CLI@v1
  #       with:
  #         azcliversion: 2.42.0
  #         inlineScript: |
  #           echo "The name is: $swaName"